@page "/games"
@using PrimeiroBlazor.Services.Interface
@using PrimeiroBlazor.Models.DTO
@using Newtonsoft.Json;
@using Settings
@inject IGameService gameService
@inject IJSRuntime javascript

<h3>Games</h3>

<div class="row">
    <div class="col">
        <input class="form-control" placeholder="Nome" @bind-value="dto.Name" />
    </div>
    <div class="col">
        <input class="form-control" placeholder="Tipo" @bind-value="dto.Type" />
    </div>
    <div class="col">
        <input class="form-control" placeholder="Valor" @bind-value="dto.Value" type="number" />
    </div>
</div>
<div class="row mt-3">
    <div class="col text-center">
        <button class="btn btn-primary btn-lg" @onclick="AddGame">Criar</button>
    </div>
</div>
@if (ListOfGames.Count > 0)
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">Nome</th>
                <th scope="col">Tipo</th>
                <th scope="col">Valor</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var i in ListOfGames)
            {
                <tr>
                    <th scope="row">@i.Name</th>
                    <td>@i.Type</td>
                    <td>@i.Value</td>
                </tr>

            }

        </tbody>
    </table>
}else{
    <p>Carregando...</p>
}




@code {
    private GamesDTO dto = new GamesDTO();
    private List<GamesDTO> ListOfGames = new List<GamesDTO>();

    private void AddGame()
    {
        var result = gameService.InsertGame(dto);
    }

    protected override async Task OnInitializedAsync()
    {
        ListOfGames = await gameService.GetAllGames();
    }

}
